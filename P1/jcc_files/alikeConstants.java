/* Generated By:JavaCC: Do not edit this line. alikeConstants.java */
package traductor;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface alikeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 1;
  /** RegularExpression Id. */
  int DIGIT = 2;
  /** RegularExpression Id. */
  int tSEMICOLON = 3;
  /** RegularExpression Id. */
  int tCOLON = 4;
  /** RegularExpression Id. */
  int tCOMMA = 5;
  /** RegularExpression Id. */
  int tLPAREN = 6;
  /** RegularExpression Id. */
  int tRPAREN = 7;
  /** RegularExpression Id. */
  int tINT = 8;
  /** RegularExpression Id. */
  int tCHAR = 9;
  /** RegularExpression Id. */
  int tBOOL = 10;
  /** RegularExpression Id. */
  int tWHILE = 11;
  /** RegularExpression Id. */
  int tLOOP = 12;
  /** RegularExpression Id. */
  int tENDLOOP = 13;
  /** RegularExpression Id. */
  int tIF = 14;
  /** RegularExpression Id. */
  int tTHEN = 15;
  /** RegularExpression Id. */
  int tELSIF = 16;
  /** RegularExpression Id. */
  int tELSE = 17;
  /** RegularExpression Id. */
  int tENDIF = 18;
  /** RegularExpression Id. */
  int tPROCEDURE = 19;
  /** RegularExpression Id. */
  int tFUNCTION = 20;
  /** RegularExpression Id. */
  int tREF = 21;
  /** RegularExpression Id. */
  int tIS = 22;
  /** RegularExpression Id. */
  int tBEGIN = 23;
  /** RegularExpression Id. */
  int tEND = 24;
  /** RegularExpression Id. */
  int tRETURN = 25;
  /** RegularExpression Id. */
  int tARRAY = 26;
  /** RegularExpression Id. */
  int tARRAY_OF = 27;
  /** RegularExpression Id. */
  int tRANGE = 28;
  /** RegularExpression Id. */
  int tPUT = 29;
  /** RegularExpression Id. */
  int tPUT_LINE = 30;
  /** RegularExpression Id. */
  int tGET = 31;
  /** RegularExpression Id. */
  int tSKIP_LINE = 32;
  /** RegularExpression Id. */
  int tINT2CHAR = 33;
  /** RegularExpression Id. */
  int tCHAR2INT = 34;
  /** RegularExpression Id. */
  int tEXIT = 35;
  /** RegularExpression Id. */
  int tTRUE = 36;
  /** RegularExpression Id. */
  int tFALSE = 37;
  /** RegularExpression Id. */
  int tNUM = 38;
  /** RegularExpression Id. */
  int tCONST_CHAR = 39;
  /** RegularExpression Id. */
  int tCONST_STRING = 40;
  /** RegularExpression Id. */
  int tASSIGN = 41;
  /** RegularExpression Id. */
  int tAND = 42;
  /** RegularExpression Id. */
  int tOR = 43;
  /** RegularExpression Id. */
  int tNOT = 44;
  /** RegularExpression Id. */
  int tEQ = 45;
  /** RegularExpression Id. */
  int tNEQ = 46;
  /** RegularExpression Id. */
  int tLT = 47;
  /** RegularExpression Id. */
  int tLE = 48;
  /** RegularExpression Id. */
  int tGT = 49;
  /** RegularExpression Id. */
  int tGE = 50;
  /** RegularExpression Id. */
  int tPLUS = 51;
  /** RegularExpression Id. */
  int tMINUS = 52;
  /** RegularExpression Id. */
  int tMULT = 53;
  /** RegularExpression Id. */
  int tDIV = 54;
  /** RegularExpression Id. */
  int tMOD = 55;
  /** RegularExpression Id. */
  int tCOMMENT = 56;
  /** RegularExpression Id. */
  int tID = 57;
  /** RegularExpression Id. */
  int UNEXPECTED_TOKEN = 58;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"integer\"",
    "\"character\"",
    "\"boolean\"",
    "\"while\"",
    "\"loop\"",
    "\"end loop\"",
    "\"if\"",
    "\"then\"",
    "\"elsif\"",
    "\"else\"",
    "\"end if\"",
    "\"procedure\"",
    "\"function\"",
    "\"ref\"",
    "\"is\"",
    "\"begin\"",
    "\"end\"",
    "\"return\"",
    "\"array\"",
    "\"of\"",
    "\"..\"",
    "\"put\"",
    "\"put_line\"",
    "\"get\"",
    "\"skip_line\"",
    "\"int2char\"",
    "\"char2int\"",
    "\"exit\"",
    "\"true\"",
    "\"false\"",
    "<tNUM>",
    "<tCONST_CHAR>",
    "<tCONST_STRING>",
    "\":=\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"=\"",
    "\"/=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"mod\"",
    "<tCOMMENT>",
    "<tID>",
    "<UNEXPECTED_TOKEN>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
  };

}
