//*****************************************************************
// File:   wc.jj
// Author: Procesadores de Lenguajes-University of Zaragoza
// Date:   febrero 2022
// Coms:   Compilar mediante "ant". Limpiar lo generado mediante "ant clean"
//         Implementa una versión sin opcines del "wc" de Unix
//         La gramática está formada por una única producción
//         Utiliza variables globales, definidas en la sección
//         TOKEN_MGR_DECLS
//         Para la ejecución, siendo "<path>" el camino hasta "wc.jar"
//              java -jar <path>/wc.jar
//              java -jar <path>/wc.jar < fichero
//*****************************************************************

options {
 	IGNORE_CASE = false;
 	COMMON_TOKEN_ACTION = false;
}

PARSER_BEGIN(wc)

package traductor;

public class wc {
    public static void main(String[] args) {
    	wc parser;
    	try {
	    	if(args.length == 0) {
				parser = new wc(System.in);
			}
			else {
	            parser = new wc(new java.io.FileInputStream(args[0]));
			}
			parser.fichero();		} catch (java.io.FileNotFoundException e) {
			System.err.println ("Fichero " + args[0] + " no encontrado.");
		} catch (TokenMgrError e) {
        	System.err.println("LEX_ERROR: " + e.getMessage());
        } catch (ParseException e) {
            System.err.println("PARSER_ERROR: " + e.getMessage());
        }
    }
}

PARSER_END(wc)

//---------------------------------------------------------
TOKEN_MGR_DECLS : {
	//lo declarado aquí estará en "wcTokenManager"
	//también estará, por ejemplo, "lengthOfMatch", "image", ...
	static int nLin = 0;
	static int nPal = 0;
	static int nChar = 0;
}
//---------------------------------------------------------
TOKEN : {
 	< tPALABRA: (~["\t","\n"," "])+ >
 	{
 		nPal++;
		nChar += lengthOfMatch;
		// nChar += image.length(); //alternativamente
 	}
| 	< tNL: "\n" >
	{
		nLin++;
		nChar++;
	}
|	< tRESTO: ~[] >
	{
		nChar++;
	}
}
//---------------------------------------------------------
void fichero() : 
{
	Token t;
}
{
	( 
		< tPALABRA >
	|	< tNL >
	|	< tRESTO >
	)+
	< EOF > {
		System.out.println(wcTokenManager.nLin + "\t" + 
			               wcTokenManager.nPal + "\t" + 
			               wcTokenManager.nChar);
	}
}
//--------------------------------------------------

